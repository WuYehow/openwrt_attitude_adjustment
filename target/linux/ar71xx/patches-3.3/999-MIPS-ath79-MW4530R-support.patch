--- a/arch/mips/ath79/machtypes.h	2013-05-19 11:23:15.905364000 +0800
+++ b/arch/mips/ath79/machtypes.h	2013-05-19 11:25:32.513359773 +0800
@@ -80,6 +80,7 @@
 	ATH79_MACH_TL_WA901ND,		/* TP-LINK TL-WA901ND */
 	ATH79_MACH_TL_WA901ND_V2,	/* TP-LINK TL-WA901ND v2 */
 	ATH79_MACH_TL_WDR4300,		/* TP-LINK TL-WDR4300 */
+	ATH79_MACH_MW4530R,		/*  MERCURY MW4530R */
 	ATH79_MACH_TL_WR1041N_V2,	/* TP-LINK TL-WR1041N v2 */
 	ATH79_MACH_TL_WR1043ND,		/* TP-LINK TL-WR1043ND */
 	ATH79_MACH_TL_WR2543N,		/* TP-LINK TL-WR2543N/ND */
--- a/arch/mips/ath79/mach-tl-wdr4300.c	2012-11-26 00:15:01.758253000 +0800
+++ b/arch/mips/ath79/mach-tl-wdr4300.c	2013-05-18 16:42:53.275514000 +0800
@@ -85,6 +85,29 @@
 	},
 };
 
+static struct gpio_led mw4530r_leds_gpio[] __initdata = {
+	{
+		.name		= "mercury:blue:qss",
+		.gpio		= WDR4300_GPIO_LED_QSS,
+		.active_low	= 1,
+	},
+	{
+		.name		= "mercury:blue:system",
+		.gpio		= WDR4300_GPIO_LED_SYSTEM,
+		.active_low	= 1,
+	},
+	{
+		.name		= "mercury:green:usb",
+		.gpio		= WDR4300_GPIO_LED_USB1,
+		.active_low	= 1,
+	},
+	{
+		.name		= "mercury:blue:wlan2g",
+		.gpio		= WDR4300_GPIO_LED_WLAN2G,
+		.active_low	= 1,
+	},
+};
+
 static struct gpio_keys_button wdr4300_gpio_keys[] __initdata = {
 	{
 		.desc		= "QSS button",
@@ -103,6 +126,24 @@
 	},
 };
 
+static struct gpio_keys_button mw4530r_gpio_keys[] __initdata = {
+	{
+		.desc		= "QSS button",
+		.type		= EV_KEY,
+		.code		= KEY_WPS_BUTTON,
+		.debounce_interval = WDR4300_KEYS_DEBOUNCE_INTERVAL,
+		.gpio		= WDR4300_GPIO_BTN_WPS,
+		.active_low	= 1,
+	},
+	{
+		.desc		= "reset",
+		.type		= EV_KEY,
+		.code		= KEY_RESTART,
+		.debounce_interval = WDR4300_KEYS_DEBOUNCE_INTERVAL,
+		.gpio		= WDR4300_GPIO_BTN_RFKILL,
+	},
+};
+
 static struct ar8327_pad_cfg wdr4300_ar8327_pad0_cfg = {
 	.mode = AR8327_PAD_MAC_RGMII,
 	.txclk_delay_en = true,
@@ -184,6 +225,55 @@
 	ath79_register_usb();
 }
 
+static void __init mw4530r_setup(void)
+{
+	u8 *mac = (u8 *) KSEG1ADDR(0x1f01fc00);
+	u8 *art = (u8 *) KSEG1ADDR(0x1fff0000);
+	u8 tmpmac[ETH_ALEN];
+
+	ath79_register_m25p80(&wdr4300_flash_data);
+	ath79_register_leds_gpio(-1, ARRAY_SIZE(mw4530r_leds_gpio),
+				 mw4530r_leds_gpio);
+	ath79_register_gpio_keys_polled(-1, WDR4300_KEYS_POLL_INTERVAL,
+					ARRAY_SIZE(mw4530r_gpio_keys),
+					mw4530r_gpio_keys);
+
+	ath79_init_mac(tmpmac, mac, -1);
+	ath79_register_wmac(art + WDR4300_WMAC_CALDATA_OFFSET, tmpmac);
+
+	ath79_init_mac(tmpmac, mac, 0);
+	ap9x_pci_setup_wmac_led_pin(0, 0);
+	ap91_pci_init(art + WDR4300_PCIE_CALDATA_OFFSET, tmpmac);
+
+	ath79_setup_ar934x_eth_cfg(AR934X_ETH_CFG_RGMII_GMAC0);
+
+	mdiobus_register_board_info(wdr4300_mdio0_info,
+				    ARRAY_SIZE(wdr4300_mdio0_info));
+
+	ath79_register_mdio(0, 0x0);
+
+	ath79_init_mac(ath79_eth0_data.mac_addr, mac, -2);
+
+	/* GMAC0 is connected to an AR8327N switch */
+	ath79_eth0_data.phy_if_mode = PHY_INTERFACE_MODE_RGMII;
+	ath79_eth0_data.phy_mask = BIT(0);
+	ath79_eth0_data.mii_bus_dev = &ath79_mdio0_device.dev;
+	ath79_eth0_pll_data.pll_1000 = 0x06000000;
+	ath79_register_eth(0);
+
+	gpio_request_one(WDR4300_GPIO_USB1_POWER,
+			 GPIOF_OUT_INIT_HIGH | GPIOF_EXPORT_DIR_FIXED,
+			 "USB1 power");
+	gpio_request_one(WDR4300_GPIO_USB2_POWER,
+			 GPIOF_OUT_INIT_HIGH | GPIOF_EXPORT_DIR_FIXED,
+			 "USB2 power");
+	ath79_register_usb();
+}
+
 MIPS_MACHINE(ATH79_MACH_TL_WDR4300, "TL-WDR4300",
 	     "TP-LINK TL-WDR3600/4300/4310",
 	     wdr4300_setup);
+
+MIPS_MACHINE(ATH79_MACH_MW4530R, "MW4530R",
+	     "MERCURY MW4530R",
+	     mw4530r_setup);
